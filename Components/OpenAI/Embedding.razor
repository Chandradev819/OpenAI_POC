@page "/embedding-demo"
@using OpenAI_POC.Service
@inject IOpenAIService OpenAIService

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm rounded-4 border-0">
                <div class="card-body">
                    <h3 class="card-title mb-4 text-primary">🔍 OpenAI Text Embedding Demo</h3>

                    <div class="mb-3">
                        <label for="inputText" class="form-label fw-bold">Enter text to embed:</label>
                        <textarea class="form-control shadow-sm" id="inputText" @bind="InputText" rows="4" placeholder="Type your text here..."></textarea>
                    </div>

                    <button class="btn btn-success px-4" @onclick="GenerateEmbeddingAsync">
                        🚀 Generate Embedding
                    </button>

                    @if (EmbeddingVector.Length > 0)
                    {
                        <div class="mt-4 p-3 bg-light rounded border shadow-sm">
                            <h5 class="text-secondary mb-2">📈 Embedding Vector</h5>
                            <p class="text-muted">Length: <strong>@EmbeddingVector.Length</strong></p>
                            <pre class="small text-wrap">@string.Join(", ", EmbeddingVector.Slice(0, Math.Min(20, EmbeddingVector.Length)).ToArray()) ...</pre>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string InputText = "Blazor is a powerful .NET web framework.";
    private ReadOnlyMemory<float> EmbeddingVector;

    private async Task GenerateEmbeddingAsync()
    {
        try
        {
            EmbeddingVector = await Task.Run(() => OpenAIService.GetEmbeddingVector(InputText));
        }
        catch (Exception ex)
        {
            Console.WriteLine($"❌ Error: {ex.Message}");
        }
    }
}
