@page "/embedding-demo"
@using OpenAI_POC.Service
@inject IOpenAIService OpenAIService

<h3>OpenAI Text Embedding Demo</h3>

<div class="mb-3">
    <label for="inputText" class="form-label">Enter text:</label>
    <textarea class="form-control" id="inputText" @bind="InputText" rows="4"></textarea>
</div>

<button class="btn btn-primary" @onclick="GenerateEmbeddingAsync">Generate Embedding</button>

@if (EmbeddingVector.Length > 0)
{
    <div class="mt-4">
        <h5>Embedding Vector (Length: @EmbeddingVector.Length)</h5>
        <div class="embedding-box">
            <pre>@string.Join(", ", EmbeddingVector.Slice(0, Math.Min(20, EmbeddingVector.Length)).ToArray()) ...</pre>
        </div>
    </div>
}

@code {
    private string InputText = "Blazor is a powerful .NET web framework.";
    private ReadOnlyMemory<float> EmbeddingVector;

    private async Task GenerateEmbeddingAsync()
    {
        try
        {
            // Call async version instead of sync
            var result = await Task.Run(() => OpenAIService.GetEmbeddingVector(InputText));
            EmbeddingVector = result;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"❌ Error: {ex.Message}");
        }
    }
}
