@page "/brand-images"
@using OpenAI_POC.Service
@inject IOpenAIService OpenAIService

<div class="container py-5" style="background-color: #f8f9fa;">
    <h3 class="mb-3">Brand-Themed AI Image Generator</h3>

    <div class="mb-3">
        <label>Business Idea</label>
        <textarea class="form-control" @bind="Prompt" rows="3"></textarea>
    </div>

    <div class="mb-3">
        <label>Model</label>
        <select class="form-select" @bind="SelectedModel">
            <option value="dall-e-2">DALL·E 2</option>
            <option value="dall-e-3">DALL·E 3</option>
        </select>
    </div>

    <button class="btn btn-primary" @onclick="GenerateImages" disabled="@IsLoading">
        @(IsLoading ? "Generating..." : "Generate Images")
    </button>

    @if (Images?.Any() == true)
    {
        <div class="row mt-4">
            @foreach (var image in Images)
            {
                <div class="col-md-3 mb-3">
                    <img src="@image" class="img-fluid rounded shadow" @onclick="@(() => ZoomImage(image))" style="cursor:zoom-in;" />
                </div>
            }
        </div>
    }

    @if (!string.IsNullOrEmpty(ZoomedImage))
    {
        <div class="lightbox" @onclick="CloseZoom">
            <img src="@ZoomedImage" class="zoomed-image" />
        </div>
    }

</div>

@code {
    private string Prompt = "An AI-powered food delivery startup for pets";
    private string SelectedModel = "dall-e-2";
    private List<string> Images;
    private bool IsLoading = false;
    private string ZoomedImage;

    private async Task GenerateImages()
    {
        Images = new();
        ZoomedImage = null;
        IsLoading = true;
        try
        {
            Images = await OpenAIService.GenerateLogoImagesAsync(Prompt, SelectedModel);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"❌ Error: {ex.Message}");
        }
        IsLoading = false;
    }

    private void ZoomImage(string url) => ZoomedImage = url;

    private void CloseZoom() => ZoomedImage = null;
}

<style>
    .lightbox {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0,0,0,0.8);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
    }

    .zoomed-image {
        max-width: 90%;
        max-height: 90%;
        border-radius: 8px;
        box-shadow: 0 0 30px rgba(255,255,255,0.3);
    }

</style>